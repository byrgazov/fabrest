# Generated by Django 2.2.10 on 2021-05-09 17:10

import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import fabrest.polls.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Polling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=models.SET(fabrest.polls.models.get_sentinel_user), related_name='questions_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=models.SET(fabrest.polls.models.get_sentinel_user), on_update=True, related_name='questions_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_time', 'title'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('description', models.TextField()),
                ('polling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.Polling')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.Question')),
                ('multiple', models.BooleanField(default=True, verbose_name='Multiple choice')),
            ],
            bases=('polls.question',),
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.Question')),
            ],
            bases=('polls.question',),
        ),
        migrations.CreateModel(
            name='ChoiceOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.ChoiceQuestion')),
            ],
            options={
                'unique_together': {('question', 'text')},
            },
        ),
        migrations.CreateModel(
            name='TextAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_id', models.PositiveIntegerField()),
                ('text', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='polls.TextQuestion')),
            ],
            options={
                'unique_together': {('guest_id', 'question')},
            },
        ),
        migrations.CreateModel(
            name='ChoiceAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_id', models.PositiveIntegerField()),
                ('choices', models.ManyToManyField(related_name='answers', to='polls.ChoiceOption')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_answers', to='polls.ChoiceQuestion')),
            ],
            options={
                'unique_together': {('guest_id', 'question')},
            },
        ),
    ]
